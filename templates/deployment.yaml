# Create a deployment for a single cost model pod
#
# See environment variables if you would like to add a Prometheus for
# cost model to read from for full functionality.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.opencost.fullname }}
  labels:
    app: opencost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opencost
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: opencost
    spec:
      serviceAccountName: opencost
      tolerations:
        {{- toYaml .Values.opencost.tolerations | nindent 8 }}
      containers:
        - image: "{{ .Values.opencost.exporter.image.repository }}:{{ .Values.opencost.exporter.image.tag }}"
          name: {{ .Values.opencost.exporter.name }}
          resources:
            {{- toYaml .Values.opencost.exporter.resources | nindent 12 }}
          env:
            - name: PROMETHEUS_SERVER_ENDPOINT
              value: "http://{{ .Values.opencost.prometheus.serviceName }}.{{ .Values.opencost.prometheus.namespaceName }}.svc" # The endpoint should have the form http://<service-name>.<namespace-name>.svc
            - name: CLOUD_PROVIDER_API_KEY
              value: {{ .Values.opencost.exporter.cloudProviderApiKey | quote }}
            - name: CLUSTER_ID
              value: {{ .Values.opencost.exporter.defaultClusterId | quote }}
          imagePullPolicy: Always
        {{- if .Values.opencost.ui.enabled }}
        - image: "{{ .Values.opencost.ui.image.repository }}:{{ .Values.opencost.ui.image.tag }}"
          name: opencost-ui
          resources:
            {{- toYaml .Values.opencost.ui.resources | nindent 12 }}
          imagePullPolicy: Always
        {{- end -}}
